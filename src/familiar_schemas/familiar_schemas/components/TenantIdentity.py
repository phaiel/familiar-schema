# generated by datamodel-codegen:
#   filename:  tmpsq6ujskt.json
#   timestamp: 2025-06-21T03:58:48+00:00

from __future__ import annotations

from enum import Enum
from typing import Annotated

from pydantic import BaseModel, ConfigDict, Field


class Engine(Enum):
    """
    The physics engine responsible for this object.
    """

    quantum = 'quantum'
    classical = 'classical'
    hybrid = 'hybrid'


class PhysicsProperties(BaseModel):
    """
    Defines the common physics-related properties for components and laws.
    """

    model_config = ConfigDict(
        frozen=True,
    )
    collapse_sensitive: Annotated[
        bool | None,
        Field(
            description='Indicates if the object is affected by or triggers quantum collapse.'
        ),
    ]
    engine: Annotated[
        Engine, Field(description='The physics engine responsible for this object.')
    ]
    is_quantum: Annotated[
        bool, Field(description='Indicates if the object has quantum properties.')
    ]


class SubscriptionPlan(str, Enum):
    """
    A canonical enum of all available subscription plans for a Tenant.
    """

    Free = 'Free'
    Personal = 'Personal'
    FamilyPlus = 'FamilyPlus'
    Enterprise = 'Enterprise'


class Fields(BaseModel):
    """
    A map of field names to their definitions. Each field can be defined inline or by referencing a shared definition.
    """

    model_config = ConfigDict(
        extra='forbid',
        frozen=True,
    )
    tenant_name: Annotated[
        str,
        Field(
            description='The primary, human-readable name of an entity.',
            title='Name Field',
        ),
    ]
    subscription_plan: Annotated[
        SubscriptionPlan,
        Field(
            description='A canonical enum of all available subscription plans for a Tenant.',
            title='Subscription Plan',
        ),
    ]


class TenantIdentity(BaseModel):
    """
    Defines the core identity and metadata for a Tenant.
    """

    model_config = ConfigDict(
        frozen=True,
    )
    physics_properties: Annotated[
        PhysicsProperties,
        Field(
            description='Defines the common physics-related properties for components and laws.',
            title='Base Physics Properties',
        ),
    ]
    fields: Annotated[
        Fields,
        Field(
            description='A map of field names to their definitions. Each field can be defined inline or by referencing a shared definition.',
            title='TenantIdentityFields',
        ),
    ]
