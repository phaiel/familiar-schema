# generated by datamodel-codegen:
#   filename:  tmpvscj6p1f.json
#   timestamp: 2025-06-21T16:54:15+00:00

from __future__ import annotations

from enum import Enum
from typing import Annotated, Sequence

from pydantic import BaseModel, ConfigDict, Field


class Engine(Enum):
    """
    The physics engine responsible for this object.
    """

    quantum = 'quantum'
    classical = 'classical'
    hybrid = 'hybrid'


class PhysicsProperties(BaseModel):
    """
    Defines the common physics-related properties for components and laws.
    """

    model_config = ConfigDict(
        frozen=True,
    )
    collapse_sensitive: Annotated[
        bool | None,
        Field(
            description='Indicates if the object is affected by or triggers quantum collapse.'
        ),
    ]
    engine: Annotated[
        Engine, Field(description='The physics engine responsible for this object.')
    ]
    is_quantum: Annotated[
        bool, Field(description='Indicates if the object has quantum properties.')
    ]


class MotifType(str, Enum):
    """
    A canonical enum of the types of recurring themes or motifs in memory.
    """

    Behavioral = 'Behavioral'
    Emotional = 'Emotional'
    Situational = 'Situational'
    Temporal = 'Temporal'


class Fields(BaseModel):
    """
    A map of field names to their definitions. Each field can be defined inline or by referencing a shared definition.
    """

    model_config = ConfigDict(
        extra='forbid',
        frozen=True,
    )
    motif_description: Annotated[
        str,
        Field(
            description='A canonical, reusable definition for a human-readable description field.',
            title='Description Field',
        ),
    ]
    motif_type: Annotated[
        MotifType,
        Field(
            description='A canonical enum of the types of recurring themes or motifs in memory.',
            title='Motif Type',
        ),
    ]
    source_entanglements: Annotated[
        Sequence[str],
        Field(
            description='A canonical definition for a list of unique entity identifiers (UUIDs).',
            title='Entity ID List',
        ),
    ]


class MotifContent(BaseModel):
    """
    Defines the emergent pattern content of a Motif entity. This is a quantum component.
    """

    model_config = ConfigDict(
        frozen=True,
    )
    physics_properties: Annotated[
        PhysicsProperties,
        Field(
            description='Defines the common physics-related properties for components and laws.',
            title='Base Physics Properties',
        ),
    ]
    fields: Annotated[
        Fields,
        Field(
            description='A map of field names to their definitions. Each field can be defined inline or by referencing a shared definition.',
            title='MotifContentFields',
        ),
    ]
