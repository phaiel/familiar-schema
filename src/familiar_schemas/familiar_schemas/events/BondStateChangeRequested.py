# generated by datamodel-codegen:
#   filename:  tmpx89uk9nq.json
#   timestamp: 2025-06-21T16:54:48+00:00

from __future__ import annotations

from enum import Enum
from typing import Annotated

from pydantic import BaseModel, ConfigDict, Field


class NewState(str, Enum):
    """
    A canonical enum of all possible lifecycle states for a Bond entity.
    """

    Active = 'Active'
    Strained = 'Strained'
    Dissolved = 'Dissolved'
    Rekindled = 'Rekindled'


class Reason(str, Enum):
    """
    A canonical enum of the machine-readable reasons for a Bond state change.
    """

    UserInitiated = 'UserInitiated'
    SystemDetectedStrain = 'SystemDetectedStrain'
    PartnerAccountErased = 'PartnerAccountErased'
    RelationshipEnded = 'RelationshipEnded'


class Payload(BaseModel):
    model_config = ConfigDict(
        frozen=True,
    )
    bond_id: Annotated[
        str,
        Field(
            description='A reusable definition for a unique entity identifier.',
            title='Entity ID Field',
        ),
    ]
    new_state: Annotated[
        NewState,
        Field(
            description='A canonical enum of all possible lifecycle states for a Bond entity.',
            title='Bond State',
        ),
    ]
    reason: Annotated[
        Reason | None,
        Field(
            description='A canonical enum of the machine-readable reasons for a Bond state change.',
            title='Bond State Reason',
        ),
    ]


class BondStateChangeRequested(BaseModel):
    """
    An event published to request a change in a Bond's lifecycle state.
    """

    model_config = ConfigDict(
        frozen=True,
    )
    event_id: Annotated[
        str,
        Field(
            description='A reusable definition for a unique entity identifier.',
            title='Entity ID Field',
        ),
    ]
    trace_id: Annotated[
        str,
        Field(
            description='A reusable definition for a unique entity identifier.',
            title='Entity ID Field',
        ),
    ]
    timestamp: Annotated[
        str,
        Field(
            description='A canonical definition for an ISO 8601 timestamp with timezone.',
            title='Timestamp',
        ),
    ]
    source_service: str
    payload: Annotated[Payload, Field(title='BondStateChangeRequestedPayload')]
