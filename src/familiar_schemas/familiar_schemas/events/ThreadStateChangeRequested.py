# generated by datamodel-codegen:
#   filename:  tmpodhs80m6.json
#   timestamp: 2025-06-21T16:54:49+00:00

from __future__ import annotations

from enum import Enum
from typing import Annotated

from pydantic import BaseModel, ConfigDict, Field


class NewState(str, Enum):
    """
    A canonical enum of all possible lifecycle states for a Thread entity.
    """

    Active = 'Active'
    Inactive = 'Inactive'
    Fading = 'Fading'
    Archived = 'Archived'


class Reason(str, Enum):
    """
    A canonical enum of the machine-readable reasons for a Thread state change.
    """

    UserMarkedInactive = 'UserMarkedInactive'
    UserMarkedDeceased = 'UserMarkedDeceased'
    SystemDetectedInactivity = 'SystemDetectedInactivity'
    LifecycleCompleted = 'LifecycleCompleted'


class Source(str, Enum):
    User = 'User'
    System = 'System'


class Payload(BaseModel):
    model_config = ConfigDict(
        frozen=True,
    )
    thread_id: Annotated[
        str,
        Field(
            description='A reusable definition for a unique entity identifier.',
            title='Entity ID Field',
        ),
    ]
    new_state: Annotated[
        NewState,
        Field(
            description='A canonical enum of all possible lifecycle states for a Thread entity.',
            title='Thread State',
        ),
    ]
    reason: Annotated[
        Reason | None,
        Field(
            description='A canonical enum of the machine-readable reasons for a Thread state change.',
            title='Thread State Reason',
        ),
    ]
    source: Source


class ThreadStateChangeRequested(BaseModel):
    """
    An event published to request a change in a Thread's lifecycle state.
    """

    model_config = ConfigDict(
        frozen=True,
    )
    title: Annotated[
        str,
        Field(
            description="The human-readable, PascalCase name of the object (e.g., 'UniversalPhysicsState')."
        ),
    ]
    description: Annotated[
        str,
        Field(
            description="A clear, complete sentence explaining the object's purpose and function within the system."
        ),
    ]
    schema_version: Annotated[
        str,
        Field(
            description="The semantic version of this schema definition (e.g., '1.0.0')."
        ),
    ]
    event_id: Annotated[
        str,
        Field(
            description='A reusable definition for a unique entity identifier.',
            title='Entity ID Field',
        ),
    ]
    trace_id: Annotated[
        str,
        Field(
            description='A reusable definition for a unique entity identifier.',
            title='Entity ID Field',
        ),
    ]
    timestamp: Annotated[
        str,
        Field(
            description='A canonical definition for an ISO 8601 timestamp with timezone.',
            title='Timestamp',
        ),
    ]
    source_service: str
    payload: Annotated[Payload, Field(title='ThreadStateChangeRequestedPayload')]
