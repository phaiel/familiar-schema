# generated by datamodel-codegen:
#   filename:  tmptk2c3sdw.json
#   timestamp: 2025-06-21T16:54:25+00:00

from __future__ import annotations

from typing import Annotated, Sequence

from pydantic import BaseModel, ConfigDict, Field, RootModel


class DensityMatrix11(BaseModel):
    """
    Represents a complex number with real and imaginary parts.
    """

    model_config = ConfigDict(
        frozen=True,
    )
    real: float
    imaginary: float


class DensityMatrix1(RootModel[Sequence[DensityMatrix11]]):
    model_config = ConfigDict(
        frozen=True,
    )
    root: Annotated[Sequence[DensityMatrix11], Field(max_length=2, min_length=2)]


class DensityMatrix(RootModel[Sequence[DensityMatrix1]]):
    """
    A 2x2 matrix of complex numbers representing a quantum state.
    """

    model_config = ConfigDict(
        frozen=True,
    )
    root: Annotated[
        Sequence[DensityMatrix1],
        Field(
            description='A 2x2 matrix of complex numbers representing a quantum state.',
            max_length=2,
            min_length=2,
            title='Density Matrix',
        ),
    ]
