# generated by datamodel-codegen:
#   filename:  tmp7toxkdmz.json
#   timestamp: 2025-06-21T16:54:31+00:00

from __future__ import annotations

from enum import Enum
from typing import Annotated

from pydantic import BaseModel, ConfigDict, Field


class Role(str, Enum):
    """
    Defines the roles a user can have within a tenant.
    """

    Admin = 'Admin'
    Member = 'Member'
    Child = 'Child'
    Guardian = 'Guardian'
    ReadOnly = 'ReadOnly'


class Member(BaseModel):
    """
    Represents a single user within a tenant, including their role and join date.
    """

    model_config = ConfigDict(
        frozen=True,
    )
    user_id: Annotated[
        str,
        Field(
            description='A canonical definition for a Universally Unique Identifier (UUID).',
            title='UUID',
        ),
    ]
    role: Annotated[
        Role,
        Field(
            description='Defines the roles a user can have within a tenant.',
            title='Tenant Member Role',
        ),
    ]
    joined_at: Annotated[
        str,
        Field(
            description='A canonical definition for an ISO 8601 timestamp with timezone.',
            title='Timestamp',
        ),
    ]
