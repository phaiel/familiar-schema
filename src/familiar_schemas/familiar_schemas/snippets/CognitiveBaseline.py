# generated by datamodel-codegen:
#   filename:  tmpd8n0cwnl.json
#   timestamp: 2025-06-21T03:59:06+00:00

from __future__ import annotations

from typing import Annotated

from pydantic import BaseModel, ConfigDict, Field


class CognitiveBaseline(BaseModel):
    """
    Defines the innate 'personality' or temperament of a Thread, modulating its physics interactions.
    """

    model_config = ConfigDict(
        frozen=True,
    )
    emotional_volatility: Annotated[
        float,
        Field(
            description='How strongly emotional events affect this person. (UI Label: Emotional Reactivity)',
            ge=0.5,
            le=2.0,
        ),
    ]
    social_energy_factor: Annotated[
        float,
        Field(
            description='How energized they are by social interactions. (UI Label: Social Energy)',
            ge=0.8,
            le=1.2,
        ),
    ]
    consolidation_rate_modifier: Annotated[
        float,
        Field(
            description='How quickly their memories become stable. (UI Label: Memory Consolidation)',
            ge=0.8,
            le=1.5,
        ),
    ]
    bond_damping_factor: Annotated[
        float,
        Field(
            description='How resistant their bonds are to change. (UI Label: Relationship Stability)',
            ge=0.5,
            le=2.0,
        ),
    ]
    exploration_bias: Annotated[
        float,
        Field(
            description='Tendency for creative, associative thinking. (UI Label: Openness to Experience)',
            ge=0.7,
            le=1.3,
        ),
    ]
